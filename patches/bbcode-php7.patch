diff --git a/bbcode-filter.inc b/bbcode-filter.inc
index e86d867..8221f6c 100644
--- a/bbcode-filter.inc
+++ b/bbcode-filter.inc
@@ -86,8 +86,7 @@ function _bbcode_filter_process(&$body, $settings) {
   if (stristr($body, '[size=') !== FALSE) { // prevent useless processing
     $arr = array(
       'tag' => 'size',
-      'pattern' => '#\[\x07=([\d]+)(?::\w+)?\]([^\x07]*)\[/\x07(?::\w+)?\]#esi',
-      'replacement' => '"<span style=\"font-size:". _bbcode_round_size_val(\'$1\') ."px\">". str_replace(\'\"\', \'"\', \'$2\') ."</span>"',
+      'pattern' => '#\[\x07=([\d]+)(?::\w+)?\]([^\x07]*)\[/\x07(?::\w+)?\]#si',
       'text' => $body,
     );
     $body = _bbcode_replace_nest_tag($arr);
@@ -168,22 +167,40 @@ function _bbcode_filter_process(&$body, $settings) {
 
     // replace to <ol>/<ul> and </ol>/</ul> tags
     // It will be better to use &count and do-while, if php 5 or higher.
-    while (preg_match("#\[\x07[=]*((?-i)[cds1aAiI])*(?::\w+)?\]([^\x07]*)\[/\x07(?::\w+)?\]#si", $body)) {
-      $body = preg_replace("#\[\x07[=]*((?-i)[cds1aAiI])*(?::\w+)?\]([^\x07]*)\[/\x07(?::\w+)?\]#esi", '"<". $l_type[\'$1\']["tag"] ." class=\"bb-list\" style=\"list-style-type:". $l_type[\'$1\']["style"] .";\">". str_replace(\'\"\', \'"\', \'$2\') ."</". $l_type[\'$1\']["tag"] .">"', $body);
+    $pattern = '#\[\x07[=]*((?-i)[cds1aAiI])*(?::\w+)?\]([^\x07]*)\[/\x07(?::\w+)?\]#si';
+    while (preg_match($pattern, $body)) {
+      $body = preg_replace_callback($pattern, function ($matches) use ($l_type) {
+        return '<' . $l_type[$matches[1]]['tag'] . ' class="bb-list" style="list-style-type: ' . $l_type[$matches[1]]['style'] . ';">' . str_replace('\"', '"', $matches[2]) . '</' . $l_type[$matches[1]]['tag'] .'>';
+      }, $body);
     }
-
     // remove <br /> tags
     $body = preg_replace('#(<[/]*([uo]l|li).*>.*)<br />#i', '$1', $body);
   } // end processing for [list] and [*]
 
-  // Define BBCode tags
-  $preg = array(
+  // Replace with callback functions
+  $static_body = &drupal_static(__FUNCTION__);
+  $static_body = $body;
+  $preg_with_callback = array(
     // Implement [notag]
-    '#\[notag(?::\w+)?\](.*?)\[/notag(?::\w+)?\]#sie' => '_bbcode_notag_tag(\'\\1\')',
+    '#\[notag(?::\w+)?\](.*?)\[/notag(?::\w+)?\]#si' => function ($matches) {
+      return str_replace( array('[', ']', '@'), array('&#91;', '&#93;', '&#64;'), stripslashes($matches[1]));
+    },
     // Headings and indexes - articles will almost always need them
-    '#\[h([1-6])(?::\w+)?\](.*?)\[/h[1-6](?::\w+)?\]#sie' => '_bbcode_generate_heading(\\1, \'\\2\')',
-    '#\[index\s*/?\]#sie' => '_bbcode_generate_index($body)',
-    '#\[index style=(ol|ul)\]#sie' => '_bbcode_generate_index($body, \'\\1\')',
+    '#\[h([1-6])(?::\w+)?\](.*?)\[/h[1-6](?::\w+)?\]#si' => '_bbcode_generate_heading',
+    '#\[index\s*/?\]#si' => '_bbcode_generate_index',
+    '#\[index style=(ol|ul)\]#si' => function ($matches) {
+      return _bbcode_generate_index('', $matches[1]);
+    },
+    // PHP code blocks (syntax highlighted)
+    '#\[php(?::\w+)?\](?:[\r\n])*(.*?)\[/php(?::\w+)?\]#si' => function ($matches) {
+      return '<pre>' . highlight_string( str_replace('<br />', '', stripslashes($matches[1])), TRUE) . '</pre>';
+    },
+  );
+  foreach ($preg_with_callback as $pattern => $callback) {
+    $body = preg_replace_callback($pattern, $callback, $body);
+  }
+  // Define BBCode tags
+  $preg = array(
     // Font, text and alignment
     '#\[align=(\w+)(?::\w+)?\](.*?)\[/align(?::\w+)?\]#si' => '<span style="text-align:\\1">\\2</span>',
     '#\[float=(left|right)(?::\w+)?\](.*?)\[/float(?::\w+)?\]#si' => '<span style="float:\\1">\\2</span>',
@@ -218,8 +235,6 @@ function _bbcode_filter_process(&$body, $settings) {
     '#\[quote(?::\w+)?\]#i' => '<div class="bb-quote">' . $quote_text . '<blockquote class="bb-quote-body">',
     '#\[quote=(?:&quot;|"|\')?(.*?)["\']?(?:&quot;|"|\')?\]#i' => '<div class="bb-quote"><b>' . $quote_user . '</b><blockquote class="bb-quote-body">',
     '#\[/quote(?::\w+)?\]#si' => '</blockquote></div>',
-    // PHP code blocks (syntax highlighted)
-    '#\[php(?::\w+)?\](?:[\r\n])*(.*?)\[/php(?::\w+)?\]#sie' => '_bbcode_php_tag(\'\\1\')',
     // Links to popular sites
     '#\[google(?::\w+)?\]([\w\s-]+?)\[/google(?::\w+)?\]#si' => '<a href="http://www.google.com/search?q=\\1">\\1</a>',
     '#\[wikipedia(?::\w+)?\]([\w\s-]+?)\[/wikipedia(?::\w+)?\]#si' => '<a href="http://www.wikipedia.org/wiki/\\1">\\1</a>',
@@ -236,7 +251,6 @@ function _bbcode_filter_process(&$body, $settings) {
     '#<table(.+?)><br />#si' => '<table\\1>',
   );
   $body = preg_replace(array_keys($preg), array_values($preg), $body);
-
   // Simple replacements (str_replace is faster than preg_replace)
   $str = array(
     // Horizontal delimiter
@@ -302,13 +316,14 @@ function _bbcode_filter_process(&$body, $settings) {
   return $body;
 }
 
-function _bbcode_generate_heading($level, $text) {
-  $anchor = preg_replace('/([\s]+)/', '_', $text);
+function _bbcode_generate_heading($matches) {
+  $anchor = preg_replace('/([\s]+)/', '_', $matches[2]);
   $anchor = preg_replace('/([\W]+)/', '',   $anchor);
-  return '<h' . $level . '><a name="' . $anchor . '">' . $text . '</a></h' . $level . '>';
+  return '<h' . $matches[1] . '><a name="' . $anchor . '">' . $matches[2] . '</a></h' . $matches[1] . '>';
 }
 
-function _bbcode_generate_index($body, $tag = 'ol') {
+function _bbcode_generate_index($matches, $tag = 'ol') {
+  $body = &drupal_static('_bbcode_filter_process');
   $level = 0;
   $index = '<' . $tag . ">\n";
   $close_tags = 0;
@@ -369,14 +384,6 @@ function _bbcode_encode_mailto($matches) {
   return $link;
 }
 
-function _bbcode_notag_tag($text = NULL) {
-  return str_replace( array('[', ']', '@'), array('&#91;', '&#93;', '&#64;'), stripslashes($text));
-}
-
-function _bbcode_php_tag($text = NULL) {
-  return '<pre>' . highlight_string( str_replace('<br />', '', stripslashes($text)), TRUE) . '</pre>';
-}
-
 function _bbcode_round_size_val($size) {
   if ($size < 6) {
     return 6;
@@ -391,9 +398,16 @@ function _bbcode_round_size_val($size) {
 
 function _bbcode_replace_nest_tag($arr = NULL) {
   $text = preg_replace('#(\[[/]*)' . $arr['tag'] . '(.*?\])#si', "$1\x07$2", $arr['text']);
-  // It will be better to use &count and do-while, if php 5 or higher.
-  while (preg_match($arr['pattern'], $text)) {
-    $text = preg_replace($arr['pattern'], $arr['replacement'], $text);
+  if ($arr['tag'] == 'size') {
+    $text = preg_replace_callback($arr['pattern'], function($matches) {
+      return '<span style="font-size: ' . _bbcode_round_size_val($matches[1]) . 'px">' . str_replace('\"', '"', $matches[2]) . '</span>';
+    }, $text);
+  }
+  else {
+    // It will be better to use &count and do-while, if php 5 or higher.
+    while (preg_match($arr['pattern'], $text)) {
+      $text = preg_replace($arr['pattern'], $arr['replacement'], $text);
+    }
   }
   return $text;
 }
