<?php

/**
 * @file
 */

/**
 * Implements hook_permission().
 */
function dru_tickets_permission() {
  return array(
    'view tickets'     => array(
      'title'           => t('View Tickets'),
      'description'     => t('Allow users to view tickets'),
      'restrict access' => TRUE,
    ),
    'moderate tickets' => array(
      'title'           => t('Moderate Tickets'),
      'description'     => t('Allow users to moderate tickets'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function dru_tickets_menu() {

  $items['admin/content/tickets'] = array(
    'title'            => 'Tickets',
    'description'      => 'Tickets page',
    'page callback'    => 'dru_tickets_page',
    'access arguments' => array('view tickets'),
    'file'             => 'dru_tickets.pages.inc',
  );
  $items['ticket/%node/accept/%'] = array(
    'page callback'    => 'dru_ticket_accept',
    'file'             => 'dru_tickets.pages.inc',
    'page arguments'   => array(1, 3),
    'access arguments' => array('moderate tickets'),
    'type'             => MENU_CALLBACK,
  );
  $items['ticket/%node/verdict/nojs/%'] = array(
    'page callback'    => 'dru_ticket_verdict',
    'file'             => 'dru_tickets.pages.inc',
    'page arguments'   => array(3, 1, 4),
    'access arguments' => array('moderate tickets'),
    'type'             => MENU_CALLBACK,
  );
  $items['ticket/%node/verdict/ajax/%'] = array(
    'page callback'     => 'dru_ticket_verdict',
    'file'              => 'dru_tickets.pages.inc',
    'page arguments'    => array(3, 1, 4),
    'access arguments'  => array('moderate tickets'),
    'delivery callback' => 'ajax_deliver',
    'type'              => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_node_info().
 */
function dru_tickets_node_info() {
  return array(
    'ticket' => array(
      'name' => t('Ticket'),
      'base' => 'dru_tickets',
      'description' => t('Claim rules violation or unacceptable behaviour.'),
      'has_title' => FALSE,
    ),
  );
}


/**
 * Implement hook_load().
 */

function dru_tickets_load($nodes) {

  $nids = array_keys($nodes);

  $result = db_query('SELECT * FROM {ticket} WHERE ticket_id IN (:nids)', array(':nids' => $nids));
  foreach ($result as $record) {
    $nodes[$record->ticket_id]->ticket = $record;
  }
}


/**
 * Implement hook_insert().
 */
function dru_tickets_insert($node) {
  db_insert('ticket')
    ->fields(array(
      'ticket_id' => $node->nid,
      'moderate_uid' => 0,
      'ticket_verdict' => '',
    ))
    ->execute();
}

/**
 * Implement hook_update().
 */

function dru_tickets_update($node) {

  db_update('ticket')
    ->fields(array(
      'ticket_id'      => $node->nid,
      'moderate_uid'   => $node->ticket->moderate_uid,
      'ticket_verdict' => $node->ticket->ticket_verdict,
    ))
    ->condition('ticket_id', $node->nid)
    ->execute();
}


/**
 * Implement hook_view().
 */
function dru_tickets_view($node, $view_mode, $langcode = NULL) {
    
  drupal_add_js(drupal_get_path('module', 'dru_tickets') . '/dru_tickets.js');
  
  if (!empty($node->ticket->moderate_uid)) {
    $author    = user_load($node->ticket->moderate_uid);
    $moderator = l($author->name, 'user/' . $author->uid);
  }
  else {
    $moderator = t('No taken yet');
  }

  if (!empty($node->ticket->ticket_verdict)) {
    $node->content['verdict'] = array(
      '#markup' => '<div class="verdict">
        <div class="label">' . t('Verdict') . ':</div>
        <div class="value">' . check_plain($node->ticket->ticket_verdict) . '</div>
      </div>',
      '#weight' => 10,
    );
  }
  else {
    $node->content['verdict'] = array(
      '#markup' => '<div class="verdict"></div>',
      '#weight' => 10,
    );
  }

  $node->content['moderator'] = array(
    '#markup' => '<div class="moderator">
      <div class="label">' . t('Moderator') . ':</div>
      <div class="value">' . $moderator . '</div>
    </div>',
    '#weight' => 10,
  );

  return $node;
}

/**
 * Implements hook_node_view().
 */
function dru_tickets_node_view($node, $view_mode) {
  if ($node->type == 'ticket' && $node->ticket->moderate_uid == 0 && user_access('moderate tickets')) {
    $token = drupal_get_token('dru_tickets');
    $node->content['links']['comment']['#links']['ticket-assign'] = array(
      'title' => t('Accept'),
      'href' => 'ticket/' . $node->nid . '/accept' . '/' . $token,
      'attributes' => array(
        'class' => array('ticket-accept'),
      ),
    );
  }

  if ($node->type == 'ticket' && $node->ticket->moderate_uid > 0 && user_access('moderate tickets')) {

    drupal_add_library('system', 'drupal.ajax');
    $token = drupal_get_token('dru_tickets');

    $node->content['links']['comment']['#links']['ticket-verdict'] = array(
      'title' => $node->ticket->ticket_verdict ? t('Change verdict') : t('Verdict'),
      'href' => 'ticket/' . $node->nid . '/verdict/nojs/' . $token,
      'attributes' => array(
        'class' => array('use-ajax', 'ticket-verdict-' . $node->nid),
      ),
    );
  }
}

/**
 * Implements hook_theme().
 */
function dru_tickets_theme($existing, $type, $theme, $path) {
  
  $theme = array();
  
  $theme['node__ticket'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--ticket',
    'path' => drupal_get_path('module', 'dru_tickets') . '/templates',
  );

  $theme['node__ticket__teaser'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--ticket--teaser',
    'path' => drupal_get_path('module', 'dru_tickets') . '/templates',
  );

  return $theme;
}

/**
 * Implement hook_preprocess_node().
 */
function dru_tickets_preprocess_node(&$vars) {
  if ($vars['type'] == 'ticket' && $vars['elements']['#view_mode'] == 'teaser') {
    $vars['theme_hook_suggestions'][] = "node__ticket__teaser";
  }
}

/**
 * Implements hook_init().
 */
function dru_tickets_init() {
  drupal_add_css(drupal_get_path('module', 'dru_tickets') . '/dru_tickets.css');
}
