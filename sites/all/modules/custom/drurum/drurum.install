<?php

/**
 * @file Stores hooks for install and update the module.
 */

/**
 * Implements hook_delete().
 */
function drurum_delete() {
  variable_del('drurum_add_organization_help');
}

/**
 * Add link to create content into User Menu.
 */
function drurum_update_7001() {
  $tree = menu_load_links('user-menu');
  $x = $right_weight = -50;
  foreach ($tree as $item) {
    if (!$item['plid']) {
      $item['weight'] = $x++;
      menu_link_save($item, $item);
      // Finding place between link to Messages and Logout.
      if ($item['link_path'] == 'messages') {
        $right_weight = $x++;
      }
    }
  }
  $parent = [
    'link_path' => 'node/add',
    'link_title' => 'Создать',
    'menu_name' => 'user-menu',
    'weight' => $right_weight,
    'expanded' => 1,
    'has_children' => 0,
    'customized' => 1,
    'language' => LANGUAGE_NONE,
    'plid' => 0,
    'module' => 'menu',
  ];
  $plid = menu_link_save($parent);
  $items = [
    [
      'link_path' => 'node/add/blog',
      'link_title' => 'Запись в блог',
      'menu_name' => 'user-menu',
      'weight' => 0,
      'language' => LANGUAGE_NONE,
      'plid' => $plid,
      'module' => 'menu',
    ],
    [
      'link_path' => 'node/add/simple-event',
      'link_title' => 'Событие',
      'menu_name' => 'user-menu',
      'weight' => 1,
      'language' => LANGUAGE_NONE,
      'plid' => $plid,
      'module' => 'menu',
    ],
    [
      'link_path' => 'node/add/organization',
      'link_title' => 'Компания',
      'menu_name' => 'user-menu',
      'weight' => 2,
      'language' => LANGUAGE_NONE,
      'plid' => $plid,
      'module' => 'menu',
    ],
  ];
  foreach ($items as $item) {
    menu_link_save($item);
  }
}

/**
 * Adding info for
 */
function drurum_update_7002() {
  variable_set('drurum_add_organization_help', '<p class="lead text-success text-center">Вы можете поддержать развитие проекта, в связи с чем информацию о вашей компании увидит большее количество пользователей!</p>
<div class="text-center">
<iframe src="https://money.yandex.ru/quickpay/shop-widget?writer=seller&targets=%D0%9D%D0%B0%20%D1%80%D0%B0%D0%B7%D0%B2%D0%B8%D1%82%D0%B8%D0%B5%20%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B0&targets-hint=&default-sum=2900&button-text=12&payment-type-choice=on&mobile-payment-type-choice=on&comment=on&hint=%D0%9E%D1%81%D1%82%D0%B0%D0%B2%D1%8C%D1%82%D0%B5%20%D1%81%D0%B2%D0%BE%D0%B9%20%D0%BD%D0%B8%D0%BA%D0%BD%D0%B5%D0%B9%D0%BC%2C%20%D1%87%D1%82%D0%BE%D0%B1%D1%8B%20%D0%BC%D1%8B%20%D0%BC%D0%BE%D0%B3%D0%BB%D0%B8%20%D0%BF%D0%BE%D0%B1%D0%BB%D0%B0%D0%B3%D0%BE%D0%B4%D0%B0%D1%80%D0%B8%D1%82%D1%8C&successURL=&quickpay=shop&account=410015352318249" width="450" height="282" frameborder="0" allowtransparency="true" scrolling="no"></iframe>
</div>');

  $type = node_type_load('organization');
  if ($type) {
    $type->help = '<p>Раздел "Компании" - включает в себя список компаний, предоставляющих услуги связанные с CMS Drupal: разработка, поддержка, хостинг, тренинги, проведение мероприятий. А также делают вклад в Drupal сообщество!</p>
<p><em>Материалы проходят проверку перед публикацией</em></p>';
    node_type_save($type);
  }
}

/**
 * Add links into footer.
 */
function drurum_update_7003() {
  db_update('block_custom')
    ->fields([
      'body' => '<div class="logo-footer col-sm-2 col-vsd-1">
  <img src="/profiles/drupalru/themes/druru/img/logos/72.png"></div>
<div class="copyright col-sm-8 col-vsd-7">
<p>Содержимое сайта публикуется на условиях <a href="/license#content">CreativeCommons Attribution-ShareAlike 3.0</a> или более поздней версии<br>
    Программные коды в тексте статей — на условиях <a href="/license#code">GNU GPL v2</a> или более поздней версии.<br><strong>Drupal</strong> - торговая марка <a href="/about/dries_buytaert">Дриса Байтаерта</a>
  </p>
</div>
<div class="age-limit col-sm-2 col-vsd-1">
  <span class="alert-danger">16+</span>
</div>
<div class="site-links col-sm-10 col-sm-offset-2 col-vsd-3 col-vsd-offset-0">
  <ul>
<li><a href="/ru_team" target="blank">Команда сайта</a></li>
<li><a href="/contact" target="blank">Обратная связь</a></li>
<li><a href="/rules" target="blank">Правила сайта</a></li>
</ul>
</div>',
    ])
    ->condition('bid', 95)
    ->execute();
}

/**
 * Add link to Privacy Policy page in footer.
 */
function drurum_update_7004() {

  db_update('block_custom')
    ->fields([
      'body' => '<div class="logo-footer col-sm-2 col-vsd-1">
  <img src="/profiles/drupalru/themes/druru/img/logos/72.png"></div>
<div class="copyright col-sm-8 col-vsd-7">
<p>Содержимое сайта публикуется на условиях <a href="/license#content">CreativeCommons Attribution-ShareAlike 3.0</a> или более поздней версии<br>
    Программные коды в тексте статей — на условиях <a href="/license#code">GNU GPL v2</a> или более поздней версии.<br><strong>Drupal</strong> - торговая марка <a href="/about/dries_buytaert">Дриса Байтаерта</a>
  </p>
</div>
<div class="age-limit col-sm-2 col-vsd-1">
  <span class="alert-danger">16+</span>
</div>
<div class="site-links col-sm-10 col-sm-offset-2 col-vsd-3 col-vsd-offset-0">
  <ul>
<li><a href="/privacy-policy" target="_blank">Конфиденциальность</a></li>
<li><a href="/rules" target="_blank">Правила</a></li>
<li><a href="/ru_team" target="_blank">Команда</a></li>
<li><a href="/contact" target="_blank">Обратная связь</a></li>
</ul>
</div>',
    ])
    ->condition('bid', 95)
    ->execute();
}

/**
 * Enable and configure module fz152.
 */
function drurum_update_7005() {
  module_enable(['fz152'], TRUE);
  variable_set('fz152_enable', 1);
  variable_set('fz152_forms', 'user_register_form|99');
  variable_set('fz152_is_checkbox', 1);
  variable_set('fz152_privacy_policy_page_path', 'privacy-policy');
  variable_set('fz152_privacy_policy_page_title', 'Политика конфиденциальности');
}

/**
 * Add "Other" to claim type
 */
function drurum_update_7006() {
  $vocabulary = taxonomy_vocabulary_machine_name_load('claim_category');
  $term = new stdClass();
  $term->name = t('Other');
  $term->vid = $vocabulary->vid;
  taxonomy_term_save($term);
}

/**
 * Allow claim to blog node type
 */
function drurum_update_7007() {
  variable_set('dru_claim_allow_for_node_blog', 1);
}

/**
 * Enable module Activity Calendar.
 */
function drurum_update_7008() {
  module_enable(['acal']);
  variable_set('acal_intervals', '15,30,45');
  variable_set('acal_color', '#2a75be');
  variable_set('acal_node_coeff', 4);

  foreach (node_type_get_names() as $type => $name) {
    variable_set('acal_node_type_' . $type, FALSE);
  }
  variable_set('acal_node_type_blog', TRUE);
}

/**
 * Calculate user activity for the last year.
 */
function drurum_update_7009(&$sandbox) {
  static $year_ago = REQUEST_TIME - 60 * 60 * 24 * 366;
  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['current_uid'] = 0;
    // We'll -1 to disregard the uid 0...
    $sandbox['max'] = db_query('SELECT COUNT(DISTINCT uid) FROM {users}')->fetchField() - 1;
  }

  $users = db_select('users', 'u')
    ->fields('u', ['uid'])
    ->condition('uid', $sandbox['current_uid'], '>')
    ->range(0, 50)
    ->orderBy('uid', 'ASC')
    ->execute();

  foreach ($users as $user) {
    $query = db_select('comment', 'c')->fields('c', ['cid', 'created']);
    $query->leftJoin('node', 'n', 'n.nid = c.nid');
    $comments = $query->fields('n', ['type'])
      ->condition('c.created', $year_ago, '>')
      ->condition('c.uid', $user->uid)
      ->execute()
      ->fetchAll();

    foreach ($comments as $comment) {
      if ($comment->type == 'blog') {
        acal_collate($user->uid, $comment->cid, acal_type_convert('comment'), $comment->created);
      }
    }

    $nodes = db_select('node', 'n')
      ->fields('n', ['nid', 'created', 'type'])
      ->condition('n.created', $year_ago, '>')
      ->condition('n.uid', $user->uid)
      ->execute()
      ->fetchAll();

    foreach ($nodes as $node) {
      if ($node->type == 'blog') {
        acal_collate($user->uid, $node->nid, acal_type_convert('node'), $node->created);
      }
    }

    $sandbox['progress']++;
    $sandbox['current_uid'] = $user->uid;
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);

  return 'All users have collated activity for the last year.';
}

/**
 * Setup Alttracker settings for fields comparing on save node.
 */
function drurum_update_7010(&$sandbox) {
  variable_set('alttracker_node_type_fields_blog', [
    'title' => 'title', 'body' => 'text_with_summary'
  ]);
}

/**
 * Set up Mailsystem theme as default using theme (Druru).
 */
function drurum_update_7011(&$sandbox) {
  variable_set('mailsystem_theme', 'druru');

}

/**
 * Enable Mailsystem and Mimemail modules.
 */
function drurum_update_7012(&$sandbox) {
  module_enable(['mailsystem', 'mimemail', 'mimemail_action']);
}

/**
 * Change text on front page.
 */
function drurum_update_7013() {
  db_update('block_custom')
    ->fields(array(
      'body' => '<div class="col-sm-7 col-vsd-8 col-sm-offset-1 text-center"><p class="lead"><span style="font-weight: 300;">Drupal (Дрýпал)</span> - является открытой платформой управления контентом для миллионов веб-сайтов и приложений. Он создан активным и разнообразным сообществом людей по всему миру.<br>Благодаря мощному функционалу Друпала, разрабатывать сложные сайты значительно проще, чем писать их с нуля.</p></div><div class="col-sm-4 col-vsd-3  text-center"><a href="/downloads" class="lead download-drupal-front"><i class="fa fa-drupal fa-4x"></i><br>Скачать Drupal!</a></div>'
    ))
    ->condition('bid', 93)
    ->execute();
}

/**
 * Set up alttracker comparing properties.
 */
function drurum_update_7014(&$sandbox) {
  variable_set('alttracker_node_type_properties_blog', [
    'title' => true,
    'status' => true,
    'comment' => true,
    'promote' => true,
    'sticky' => true,
    'changed' => true,
  ]);
}

/**
 * Hide profile field "Security Question".
 */
function drurum_update_7015() {
  // Hide field on registration
  db_update('profile_field')
  ->fields(array('register' => 0))
  ->condition('fid', 37)
  ->execute();
  // Hide field in profile
  db_update('profile_field')
  ->fields(array('visibility' => 4))
  ->condition('fid', 37)
  ->execute();

  //enable recaptcha
  module_enable(['recaptcha']);

  // disable ascii_art_captcha
  module_disable(['ascii_art_captcha']);

  // Set recaptcha by default
  variable_set('captcha_default_challenge', 'recaptcha/reCAPTCHA');
}

/**
 * Hide profile field "Open external links...".
 */
function drurum_update_7016() {
  // Hide field in profile
  db_update('profile_field')
  ->fields(array('visibility' => 4))
  ->condition('fid', 32)
  ->execute();
}

/**
 * Add settings for alttracker (hide news from some forums).
 */
function drurum_update_7021() {
  variable_set('alttracker_ignore_terms', array('2066','2057','3769'));
  variable_set('alttracker_vocabulary_1', 'Мусор, Курилка, Модераторский');
}
 