<?php

/**
 * @file
 */

/**
 * Implements hook_comment_view().
 */
function dru_comment_quote_comment_view($comment) {
  if (user_access('post comments')) {
    $node = node_load($comment->nid);
    if ($node->comment == COMMENT_NODE_OPEN) {
      $comment->content['#pre_render'][] = 'dru_comment_quote_link_pre_render';
    }
  }
}

/**
 * Implements hook_node_view().
 */
function dru_comment_quote_node_view($node, $view_mode) {
  if ($view_mode === 'full' && user_access('post comments') && in_array($node->type, _quote_variable_get('node_types')) && $node->comment == COMMENT_NODE_OPEN && _quote_variable_get('node_link_display')) {
    $node->content['#pre_render'][] = 'dru_comment_quote_link_pre_render';
  }
}

/**
 * Implements hook_preprocess_field().
 */
function dru_comment_quote_preprocess_field(&$variables) {

  if (!in_array($variables['element']['#field_name'], array('body', 'comment_body'))) {
    return;
  }
  $variables['classes_array'][] = 'dru-comment-quote-content';
  $variables['attributes_array']['data-user'][] = $variables['element']['#object']->name;
}

/**
 * Prepare quote link for node and node comment.
 *
 * @param
 *
 * @return
 */
function dru_comment_quote_link_pre_render($element) {
  static $js_added = FALSE;

  if (!$js_added) {
    drupal_add_js(drupal_get_path('module', 'dru_comment_quote') . '/dru-comment-quote.js');
    drupal_add_js(array(
      'dru_comment_quote' => array(
        'pleas_select' => t('Please select the commented text'),
      ),
    ), 'setting');
    $js_added = TRUE;
  }
  if (!isset($element['links']['comment']['#links']['quote'])) {
    return;
  }

  $link = $element['links']['comment']['#links']['quote'];
  unset($element['links']['comment']['#links']['quote']);
  unset($link['query']);
  $link['href'] = 'comment';
  $link['fragment'] = 'comment-quote';
  $link['attributes']['class'][] = 'comment-quote-link';
  $element['links']['comment']['#links']['quote-comment'] = $link;
  return $element;
}
