<?php

/**
 * @file
 */

/**
 * Implements hook_validator_info().
 * Antinoob validation.
 */
function antinoob_validate_validator_info() {
  $items = array();
  $items[] = array(
    'type' => 'text',
    'title' => t('Exclamation'),
    'description' => t('Disallow to use multiple exclamation symbols in a row.'),
    'name' => 'exclamation_point',
    'callback' => 'antinoob_exclamation_symbol_callback',
  );

  $items[] = array(
    'type' => 'text',
    'title' => t('Caps Lock'),
    'description' => t('Disallow to use all capital words.'),
    'name' => 'caps_lock',
    'callback' => 'antinoob_caps_lock_callback',
  );

  $restricted_words = explode("\n", file_get_contents(drupal_get_path('module', 'antinoob_validate') . '/forbitten.words'));
  $words = array();
  foreach($restricted_words as $word) {
    $word = trim($word);
    if(!empty($word)) {
      $words[] = '"' . $word . '"';
    }
  }
  

  $items[] = array(
    'type' => 'text',
    'title' => t('Disallowed words'),
    'description' => t('Disallow to use word(s): !words.', array('!words' => implode(', ', $words))),
    'name' => 'disallowed_words',
    'callback' => 'antinoob_disallowed_words_callback',
  );
  return $items;
}

/**
 *
 */
function antinoob_disallowed_words_callback($validate_value) {
  $status = FALSE;

  $restricted_words = explode("\n", file_get_contents(drupal_get_path('module', 'antinoob_validate') . '/forbitten.words'));
  
  $words = FALSE;

  foreach ($restricted_words as $word) {
    if(!empty($word)) {
      $word = trim($word);
      preg_match('/(^|\s)' . $word . '($|\s)/ui', $validate_value, $matches);
      $wd = trim(array_shift($matches));
      if (!empty($wd)) {
        $words[] = $wd;
      }
    }
  }
  
  if($words){
    $status = t('[@word] is forbidden to use.', array('@word' => implode(', ', $words)));
  }

  return $status;
}

/**
 *
 */
function antinoob_exclamation_symbol_callback($validate_value) {

  $status = FALSE;

  if (preg_match('/!!/', $validate_value)) {
    $status = t('Do not use more than one exclamation point in a row.');
  }

  return $status;
}

/**
 *
 */
function antinoob_caps_lock_callback($validate_value) {
  $status = FALSE;

  $upper = mb_strtoupper($validate_value);
  if ($validate_value == $upper) {
    $status = t('Using ALL capital symbols is forbidden. ');
  }

  return $status;
}
