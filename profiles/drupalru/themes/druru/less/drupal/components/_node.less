.node {
  &.node-teaser {
    // @todo Refactor
    &.node-event {
      position: relative;
      border: 1px solid @well-border;
      margin-bottom: @line-height-computed; // @todo Replace with proper variable
      background-color: @body-bg;

      h2 {
        margin-top: 0;
      }

      @media @tablet {
        &:before {
          content: '';
          display: block;
          width: 0;
          height: 0;
          border-width: 2px 40px 2px 0;
          border-style: solid;
          border-color: transparent @well-border transparent transparent;
          position: absolute;
          left: -40px;
          top: 1.6em;
        }
      }
    }
  }

  // @todo Refactor
  &.node-unpublished {
    background-color: @state-danger-bg;
  }
  // @todo Refactor
  .unpublished-item {
    color: @state-danger-text;
  }
}

////////////////////
// Generic styling for node
.node {
  @entity();

  .page-node:not(.front) .main & {
    grid-gap: @gap-entity;
  }

  &__content {
    @media (max-width: @grid-float-breakpoint) {
      .border(0, 0, 1, 0, @color-divider);
      padding-bottom: @gap-entity;
    }
  }

  &__links > * {
    background-color: @color-entity-links-bg-hover;
  }

  &__status {
    // @todo Add dom elements for markers such as 'new' to nodes in lisiting.
    .is-new &::after,
    .is-updated &::after {
      @icon();
      content: @fa-var-circle;
      font-size: @font-size-aux;
      color: @color-notification;
    }
  }

  &__comments-count {
    &::before,
    &::after {
      @icon();
    }

    &::before {
      content: @fa-var-commenting-o;
      margin-right: @gap-icon;

      .has-new-comments & {
        content: @fa-var-commenting;
        color: @color-notification;
      }

      .has-no-comments & {
        content: @fa-var-comment-o;
      }

    }

    .has-accepted-answer & {
      display: flex;
    }

    &::after {
      .has-accepted-answer & {
        content: @fa-var-check;
        color: @color-notification;
        order: -1;
        margin-right: @gap-inline-v;
      }
    }
  }

  &__new-comments {
    color: @color-notification;
  }
}

.accepted-answer {
  .border(1, 1, 1, 1, @color-notification);
  margin-top: @gap-entity;
  padding: @padding;

  @media (min-width: @grid-float-breakpoint) {
    padding: @padding @padding 0 @padding;
  }
}
